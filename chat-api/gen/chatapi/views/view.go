// Code generated by goa v3.4.3, DO NOT EDIT.
//
// chatapi views
//
// Command:
// $ goa gen chat-api/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// GoaChatCollection is the viewed result type that is projected based on a
// view.
type GoaChatCollection struct {
	// Type to project
	Projected GoaChatCollectionView
	// View to render
	View string
}

// GoaChatCollectionView is a type that runs validations on a projected type.
type GoaChatCollectionView []*GoaChatView

// GoaChatView is a type that runs validations on a projected type.
type GoaChatView struct {
	// room id
	ID *int
	// user id
	UserID *string
	// room name
	RoomName *string
	// member
	Member *string
	// chat
	Chat   *string
	PostDt *string
}

var (
	// GoaChatCollectionMap is a map of attribute names in result type
	// GoaChatCollection indexed by view name.
	GoaChatCollectionMap = map[string][]string{
		"default": []string{
			"id",
			"UserId",
			"RoomName",
			"Member",
			"Chat",
			"PostDt",
		},
	}
	// GoaChatMap is a map of attribute names in result type GoaChat indexed by
	// view name.
	GoaChatMap = map[string][]string{
		"default": []string{
			"id",
			"UserId",
			"RoomName",
			"Member",
			"Chat",
			"PostDt",
		},
	}
)

// ValidateGoaChatCollection runs the validations defined on the viewed result
// type GoaChatCollection.
func ValidateGoaChatCollection(result GoaChatCollection) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateGoaChatCollectionView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateGoaChatCollectionView runs the validations defined on
// GoaChatCollectionView using the "default" view.
func ValidateGoaChatCollectionView(result GoaChatCollectionView) (err error) {
	for _, item := range result {
		if err2 := ValidateGoaChatView(item); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateGoaChatView runs the validations defined on GoaChatView using the
// "default" view.
func ValidateGoaChatView(result *GoaChatView) (err error) {
	if result.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "result"))
	}
	if result.UserID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("UserId", "result"))
	}
	if result.RoomName == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("RoomName", "result"))
	}
	if result.Member == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("Member", "result"))
	}
	if result.Chat == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("Chat", "result"))
	}
	if result.PostDt == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("PostDt", "result"))
	}
	if result.PostDt != nil {
		err = goa.MergeErrors(err, goa.ValidateFormat("result.PostDt", *result.PostDt, goa.FormatDateTime))
	}
	return
}
