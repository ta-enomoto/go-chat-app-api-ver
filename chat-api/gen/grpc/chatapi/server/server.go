// Code generated by goa v3.3.1, DO NOT EDIT.
//
// chatapi gRPC server
//
// Command:
// $ goa gen chat-api/design

package server

import (
	chatapi "chat-api/gen/chatapi"
	chatapipb "chat-api/gen/grpc/chatapi/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the chatapipb.ChatapiServer interface.
type Server struct {
	GetchatH goagrpc.UnaryHandler
	PingH    goagrpc.UnaryHandler
	chatapipb.UnimplementedChatapiServer
}

// ErrorNamer is an interface implemented by generated error structs that
// exposes the name of the error as defined in the expr.
type ErrorNamer interface {
	ErrorName() string
}

// New instantiates the server struct with the chatapi service endpoints.
func New(e *chatapi.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		GetchatH: NewGetchatHandler(e.Getchat, uh),
		PingH:    NewPingHandler(e.Ping, uh),
	}
}

// NewGetchatHandler creates a gRPC handler which serves the "chatapi" service
// "getchat" endpoint.
func NewGetchatHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeGetchatRequest, EncodeGetchatResponse)
	}
	return h
}

// Getchat implements the "Getchat" method in chatapipb.ChatapiServer interface.
func (s *Server) Getchat(ctx context.Context, message *chatapipb.GetchatRequest) (*chatapipb.GoaChatCollection, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "getchat")
	ctx = context.WithValue(ctx, goa.ServiceKey, "chatapi")
	resp, err := s.GetchatH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*chatapipb.GoaChatCollection), nil
}

// NewPingHandler creates a gRPC handler which serves the "chatapi" service
// "ping" endpoint.
func NewPingHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, nil, EncodePingResponse)
	}
	return h
}

// Ping implements the "Ping" method in chatapipb.ChatapiServer interface.
func (s *Server) Ping(ctx context.Context, message *chatapipb.PingRequest) (*chatapipb.GoaChatCollection, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "ping")
	ctx = context.WithValue(ctx, goa.ServiceKey, "chatapi")
	resp, err := s.PingH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*chatapipb.GoaChatCollection), nil
}
